h1. DbAgile - SQL Databases with Agility

DbAgile aims at providing agile tools around databases, and relational/sql databases in particular.

h2. Command line tool

DbAgile installs a 'dba' command line tool whose aim is to support database administrators for simple but very common tasks, as illustrated below.

<pre class="shell">
  dba --help

  usage: dba [--version] [--help]
         dba help <subcommand>
         dba <subcommand> [OPTIONS] [ARGS]

  Main commands:
    help       Show help for a specific command
    history    Display dba command history
    replay     Replay a previous history command (last one by default)

  Configuration management:
    list       List available database configurations (found in ~/.dbagile)
    ping       Ping a configuration (current one by default)
    use        Set the current database configuration to use
    add        Add a new database configuration
    rm         Remove a database configuration

  Import/Export management:
    show       Display content of a table/view/query (shortcut for 'export --text ...')
    export     Export a table/view/query to (csv, json, yaml, ruby, xml)
    import     Import a table from (csv, json, yaml, ruby)
</pre>

h3. Getting started

By default, 'dba' works with its own ~/.dbagile and ~/.dbagile_history files for managing connection configurations and command history, respectively. Assuming an existing postgresql database named 'contacts' on your machine (adapt all parameters, of course) and an existing 'people' table inside the database, try the following commands in a shell:

<pre class="shell">
  dba add contacts postgres://user:password@localhost/contacts
  dba list
  dba ping
  dba show --pretty people
  dba export --csv people
</pre>

h2. Command line API

All subcommands of 'dba' are easily accessible through a simple ruby API:

<pre>
  DbAgile::command do |env, dbagile|
    # Override environment default values (~/.dbagile, ...)
    env.config_file_path  = ...    # your application own config file
    env.history_file_path = nil    # no history
    env.output_buffer     = ...    # keep messages in any object supporting :<< (STDOUT by default)
  
    # Start using dbagile commands
    dbagile.add %w{contacts postgres://user:password@localhost/contacts}
    dbagile.list
    dbagile.ping
    dbagile.show %w{--pretty people}
    dbagile.export %w{--csv people}
  end
</pre>

h2. Installation

Required dependencies:

* sbyc >= 0.1.2
* sequel >= 3.8.0

Optional dependencies (according to your needs):

* mysql, pg, sqlite, ... (according to your sql database needs)
* json                   (only if you use json import/export)
* fastercsv              (only if you use csv import/export)
* yaml                   (only if you use yaml import/export)
* builder                (only if you use xml export)
* highline               (only if you want friendly command line tools)

To install dbagile (required dependencies are automatically installed):

<pre>
  gem install dbagile
</pre>

h2. Credits

DbAgile (c) 2010 by Bernard Lambeau and the University of Louvain. DbAgile is distributed under the MIT licence. Please see the LICENCE.textile document for details.