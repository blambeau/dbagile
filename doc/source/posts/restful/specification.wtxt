h1. Restful Specification

The restful specification implemented by DbAgile follows. The documentation here assumes a SQL database named 'address_book' with a 'contacts' table with following heading

<<+{examples/contacts.wrb}

The ruby implementation is based on the following classes.[1]

- @{Restful::MiddleWare} := Restful implementation for a complete @{Core::ConfigFile} or @{Core::Environment}. 
  Installs paths under <code>/config_name/table</code> and delegates effective access to a OneConfig/Get/Post/Delete instance according to <code>config_name</code>. 
- @{Restful::MiddleWare::OneConfig} := Complete restful implementation for one database @{Core::Configuration} only. Recognizes <code>/table</code> url paths.
- @{Restful::MiddleWare::Get} := GET implementation for one database @{Core::Configuration} only. Recognizes <code>/table</code> url paths.
- @{Restful::MiddleWare::Post} := POST implementation for one database @{Core::Configuration} only. Recognizes <code>/table</code> url paths.
- @{Restful::MiddleWare::Delete} := DELETE implementation for one database @{Core::Configuration} only. Recognizes <code>/table</code> url paths.

h2. The GET interface

The GET interface corresponds to a SELECT. The query string is interpreted as a table restriction (WHERE). However, only parameters that match a table attribute are taken into account (noise free).

- /table := Returns the content of the table in json format. SQL values are converted to JSON values whenever possible. They are to_s'ed otherwise.
- /table.[json|yaml|xml|txt|rb] := Returns the content of the table in specified format with default options. 
                                   Equivalent to 'dba export --format=...table' 

Example (jquery):

<<+{examples/get.wjs}

h2. The POST interface

The POST interface corresponds to an INSERT. 

- /table := Attemps a SQL insert on table with tuple build with POST parameters. 
            ATTENTION: unlike GET, this access is not noise free: posting invalid attributes will lead to an error.
- /table.[json|yaml|rb] := Uploads data inside a table through INSERT statements. 
                           This access expects a _data_ parameter for uploaded file.

h2. The DELETE interface

The DELETE interface corresponds to an DELETE (sic). 

- /table := Attemps a SQL delete on table. Request parameters are interpreted as a restriction (WHERE). 
            ATTENTION: unlike GET, this access is not noise free: invalid restriction attributes will lead to an error.

fn1. Unless stated explicitely by a rooted ruby namespace (i.e. starting with '::'), all classes referenced here are under the ::DbAgile namespace.